@page "/clients"

<PageTitle>Profile</PageTitle>

@inject IJSRuntime js
@inject NavigationManager manager
@inject SingletonServise servise

<section >
<div class="modal fade" id="modalRegisterForm" data-bs-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
     aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header text-center">
                <h4 class="modal-title w-100 font-weight-bold">Регистрация клиента</h4>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="() => Clear()">
                </button>
            </div>
            <div class="modal-body mx-3">
                <div class="md-form mb-5">
                    <i class="fas fa-user prefix grey-text" ></i>
                    <div id="inputBox">
                        <input class="fas fa-envelope prefix grey-text" type="text" @bind-value=ClientName required="required">
                        <span id="span">Фамилия, имя, отчество</span>
                    </div>
                </div>
                <div class="md-form mb-5">
                    <i class="fas fa-envelope prefix grey-text" ></i>
                    <div id="inputBox">
                        <input class="fas fa-envelope prefix grey-text" type="text" @bind-value=Email required="required">
                        <span id="span">Почтовый адрес</span>
                    </div>
                </div>
                <div class="md-form mb-5">
                    <i class="fas fa-phone prefix grey-text" ></i>
                    <div id="inputBox">
                        <input class="fas fa-envelope prefix grey-text" type="text" @bind-value=PhoneNumber maxlength="11" onkeyup="this.value = this.value.replace(/[^0-9]/ig, '')" required="required">
                        <span id="span">Номер телефона</span>
                    </div> 
                 </div>
            </div>
            <div class="modal-footer d-flex justify-content-center">
                <button class="btn btn-default btn-success" @onclick="() => AddNewClient()" >Добавить</button>
            </div>
        </div>
    </div>
</div>
<div  class="appbar">
    <input id="searching" class="sort" type="text" @bind="Search" @bind:event="oninput" @onkeyup="Searching" required="required" placeholder="Поиск">
    <i id="searching" class="fas fa-search prefix grey-text"></i>
    <button id="newClient" class="btn btn-default btn-success" data-bs-toggle="modal" data-bs-target="#modalRegisterForm">
    Добавить нового клиента
</button>
</div>
    <table class="table">
        <thead >
            <tr>
                <th>Фамиля, имя, отчество</th>
                <th>Почтовый адрес</th>
                <th>Номер телефона</th>
                <th>Личный кабинет</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var client in sortingClients)
            {
                <tr>
                    <td>@client.ClientName</td>
                    <td>@client.Email</td>
                    <td>@client.PhoneNumber</td>
                    <td>
                        <button type="button" class="btn btn-info" @onclick="() => OpenCurentClient(client)">Profile</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</section>
@code
{
    List<Client> clients = new List<Client>();
    List<Client> sortingClients = new List<Client>();
    string ClientName = "";
    string Email = "";
    string PhoneNumber = "";
    string Search = "";
    protected override void OnInitialized()
    {
        js.InvokeVoidAsync("ChangePanelsState");
        clients = Mongo.FindAllClient();
        sortingClients = clients;
    }

    private void Searching()
    {
        sortingClients = clients.Where((element) =>
            element.ClientName.ToLower().Contains(Search.ToLower())
            || element.Email.ToLower().Contains(Search.ToLower())
            || element.PhoneNumber.ToLower().Contains(Search.ToLower()))
        .ToList();
    }


    private void AddNewClient()
    {
        if (ClientName != "" && (PhoneNumber != "" && PhoneNumber.Length == 11) && Email != "")
        {
            if (Mongo.FindClient(Email) == null)
            {
                Mongo.AddClientToDB(new Client(ClientName, Email, PhoneNumber));
                clients.Add(new Client(ClientName, Email, PhoneNumber));
                Searching();
                Clear();
            }
            else return;
        }
        else return;
    }



    private void Clear()
    {
        ClientName = "";
        Email = "";
        PhoneNumber = "";
    }

    private void OpenCurentClient(Client client)
    {
        servise.client = client;
        manager.NavigateTo("clientProfile");
    }
}


<style>

    .appbar{
        margin-bottom: 20px;
    }

    #newClient {
        margin-left: 50%;
    }

    #searching{
        width: 250px;
        height: 35px;
    }

    #searching ~ i {
        margin-left: -26px;
    }

    #inputBox {
        position: relative;
        margin-top: -33px;
    }

    #span {
        margin-top: -30px;
    }
    #inputBox input {
        background-color: transparent;
        border: 0;
        border-bottom: 1px solid #ced4da;
        border-radius: 0;
        outline: none;
        color: black;
        font-size: 14px;
        margin-left: 2.6rem;
        height: 30px;
        width: 400px;
    }

    #inputBox span {
        position: absolute;
        left: 45px;
        padding: 4px;
        pointer-events: none;
        font-size: 0.8em;
        color: gray;
        text-transform: uppercase;
        transition: 0.5s;
    }

    #inputBox input:valid ~ span,

    #inputBox input:focus ~ span {
        color: grey;
        transform: translateX(-1px) translateY(-15px);
        font-size: 0.6em;
        background: none;
        letter-spacing: 0.2em;
    }

    .md-form .prefix ~ input{
        width: calc(100% - 2rem);
        margin-left: 2.5rem;
    }

    .md-form .prefix {
        position: relative;
        transition: color .2s;
        font-size: 1.75rem;
    }
</style>



    